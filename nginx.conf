events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Résolution DNS Docker interne, actualisée toutes les 10s
    resolver 127.0.0.11 valid=10s;

    upstream django_app {
        # Nginx interroge le service "web" (tous les réplicas web_N)
        server web:8080 max_fails=3 fail_timeout=10s;
        # Avec Docker Compose, le nom "web" pointe vers tous les conteneurs web_N (jusqu'à 5)
    }

    server {
        listen 80;
        server_name _;

        client_max_body_size 100M;

        location / {
            proxy_pass http://django_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering off;
        }

        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }

        location /media/ {
            alias /var/www/media/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }

        # WebSocket support (si besoin)
        location /ws/ {
            proxy_pass http://django_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Healthcheck endpoint pour Nginx lui-même
        location /health/ {
            proxy_pass http://django_app/health/;
            proxy_set_header Host $host;
        }

        # Sécurité : interdiction d'accès aux fichiers sensibles
        location ~ /\. {
            deny all;
        }
        location ~* \.(log|conf)$ {
            deny all;
        }
    }
}
