services:
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d mydb -U myuser"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  web:
    build: .
    restart: always
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    environment:
      - DEBUG=0
      - SECRET_KEY=change_this_to_a_secure_random_string
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - MEDIA_URL=/media/
      - STATIC_URL=/static/
      - DATABASE_NAME=mydb
      - DATABASE_USER=myuser
      - DATABASE_PASSWORD=mypassword
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
    command: >
      sh -c "cd /app/mentor_link &&
      python manage.py collectstatic --noinput &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      daphne -b 0.0.0.0 -p 8080 main.asgi:application"
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8080"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      web:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  static_volume:
  media_volume:
  postgres_data:

networks:
  backend:
